services:
  api:
    container_name: api_core
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - 0.0.0.0:3030:3030
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bridge

  postgres:
    image: postgres:14.1-alpine
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - ./pgdata/production/data:/var/lib/postgresql/data
      - ./config/postgres/initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      PGDATA: /var/lib/postgresql/data
    networks:
      - bridge
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 2s
      retries: 5

  redis:
    container_name: bridge_redis
    image: redis:7-alpine
    networks:
      - bridge
    volumes:
      - ./redisdata:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis-custom.conf
    restart: unless-stopped
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    command:
      [
        "redis-server",
        "--include /usr/local/etc/redis/redis-custom.conf"
      ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 2s
      retries: 10

networks:
  bridge:

